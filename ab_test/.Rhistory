num_searches <= 500 ~ 500,
num_searches <= 750 ~ 750,
num_searches <= 1000 ~ 1000,
num_searches <= 1250 ~ 1250,
num_searches <= 1500 ~ 1500,
num_searches <= 1750 ~ 1750,
num_searches <= 2000 ~ 2000,
num_searches <= 2250 ~ 2250,
num_searches <= 2500 ~ 2500,
num_searches <= 2750 ~ 2750,
num_searches > 3000 ~ 3000))
View(data)
response_by_account_age <- data %>%
select(user_id,group, action, days_since_account_creation) %>%
mutate(account_age_category = case_when(
days_since_account_creation == 0 ~ 0,
days_since_account_creation <= 180 ~ 16,
days_since_account_creation <= 365 ~ 61,
days_since_account_creation <= 730 ~ 12,
days_since_account_creation <= 1095 ~ 23,
days_since_account_creation <= 1460 ~ 34,
days_since_account_creation <= 1825 ~ 45,
days_since_account_creation <= 2190 ~ 56,
days_since_account_creation <= 2555 ~ 67,
days_since_account_creation <= 2920 ~ 78,
days_since_account_creation <= 3285 ~ 89,
days_since_account_creation <= 3650 ~ 910,
days_since_account_creation > 3650 ~ 10
))
response_by_account_age <- data %>%
dplyr::select(user_id,group, action, days_since_account_creation) %>%
mutate(account_age_category = case_when(
days_since_account_creation == 0 ~ 0,
days_since_account_creation <= 180 ~ 16,
days_since_account_creation <= 365 ~ 61,
days_since_account_creation <= 730 ~ 12,
days_since_account_creation <= 1095 ~ 23,
days_since_account_creation <= 1460 ~ 34,
days_since_account_creation <= 1825 ~ 45,
days_since_account_creation <= 2190 ~ 56,
days_since_account_creation <= 2555 ~ 67,
days_since_account_creation <= 2920 ~ 78,
days_since_account_creation <= 3285 ~ 89,
days_since_account_creation <= 3650 ~ 910,
days_since_account_creation > 3650 ~ 10
))
View(response_by_account_age)
invalid_rows <- data[data$days_since_account_creation < 0, ]
na_values_days <- data %>%
select(days_since_account_creation) %>%
filter(is.na(days_since_account_creation))
user_counts_by_age <- response_by_account_age %>%
group_by(group,account_age_category) %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = n_distinct(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
View(user_counts_by_age)
View(user_counts_by_searches)
group50 <- subset(searches, searches_category = 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
# Take a random sample of rows from the afternoon_group
sample_size <- 2500
sample <- shuffled_50group[1:sample_size, ]
searches_sampled <- searches[searches$searches_category != 50, ]
searches_sampled <- rbind(searches_sampled, sample)
searches <- searches_sampled %>%
filter(searches_category == 0 | searches_category == 50 )
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action)) %>%
filter(searches_category == 0 | searches_category == 50 )
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
chisq_result <- chisq.test(observed_overall)
test_statistic <- chisq_result$statistic
p_value <- chisq_result$p.value
cat("Chi-Squared Test Results:\n")
cat("Test Statistic:", test_statistic, "\n")
cat("p-value:", p_value, "\n")
View(searches)
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = n_distinct(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
View(user_counts_by_searches)
group50 <- subset(searches, searches_category = 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
# Take a random sample of rows from the afternoon_group
sample_size <- 3300
sample <- shuffled_50group[1:sample_size, ]
searches_sampled <- searches[searches$searches_category != 50, ]
searches_sampled <- rbind(searches_sampled, sample)
searches <- searches_sampled %>%
filter(searches_category == 0 | searches_category == 50 )
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action)) %>%
filter(searches_category == 0 | searches_category == 50 )
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = n_distinct(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
group50 <- subset(searches, searches_category = 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
# Take a random sample of rows from the afternoon_group
sample_size <- 3300
sample <- shuffled_50group[1:sample_size, ]
searches_sampled <- searches[searches$searches_category != 50, ]
searches_sampled <- rbind(searches_sampled, sample)
searches <- searches_sampled %>%
filter(searches_category == 0 | searches_category == 50 )
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action)) %>%
filter(searches_category == 0 | searches_category == 50 )
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
View(searches)
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action))
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
chisq_result <- chisq.test(observed_overall)
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action))
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
chisq_result <- chisq.test(observed_overall)
test_statistic <- chisq_result$statistic
p_value <- chisq_result$p.value
cat("Chi-Squared Test Results:\n")
cat("Test Statistic:", test_statistic, "\n")
cat("p-value:", p_value, "\n")
# Take a random sample of rows from the afternoon_group
sample_size <- 3000
group50 <- subset(searches, searches_category = 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
# Take a random sample of rows from the afternoon_group
sample_size <- 3000
sample <- shuffled_50group[1:sample_size, ]
searches_sampled <- searches[searches$searches_category != 50, ]
searches_sampled <- rbind(searches_sampled, sample)
searches <- searches_sampled %>%
filter(searches_category == 0 | searches_category == 50 )
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action))
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
searches <- data %>%
dplyr::select(user_id,action,num_searches,date) %>%
mutate(searches_category = case_when(
num_searches == 0 ~ 0,
num_searches <= 50 ~ 50,
num_searches <= 250 ~ 250,
num_searches <= 500 ~ 500,
num_searches <= 750 ~ 750,
num_searches <= 1000 ~ 1000,
num_searches <= 1250 ~ 1250,
num_searches <= 1500 ~ 1500,
num_searches <= 1750 ~ 1750,
num_searches <= 2000 ~ 2000,
num_searches <= 2250 ~ 2250,
num_searches <= 2500 ~ 2500,
num_searches <= 2750 ~ 2750,
num_searches > 3000 ~ 3000))
searches <- searches_sampled %>%
filter(searches_category == 0 | searches_category == 50 )
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action))
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
searches <- searches_sampled %>%
filter(searches_category == 0 | searches_category == 50 )
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = sum(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
searches <- data %>%
dplyr::select(user_id,action,num_searches,date) %>%
mutate(searches_category = case_when(
num_searches == 0 ~ 0,
num_searches <= 50 ~ 50,
num_searches <= 250 ~ 250,
num_searches <= 500 ~ 500,
num_searches <= 750 ~ 750,
num_searches <= 1000 ~ 1000,
num_searches <= 1250 ~ 1250,
num_searches <= 1500 ~ 1500,
num_searches <= 1750 ~ 1750,
num_searches <= 2000 ~ 2000,
num_searches <= 2250 ~ 2250,
num_searches <= 2500 ~ 2500,
num_searches <= 2750 ~ 2750,
num_searches > 3000 ~ 3000))
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = sum(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
searches <- searches_sampled %>%
filter(searches_category == 0 | searches_category == 50 )
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = sum(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
group50 <- subset(searches, searches_category == 50)
searches <- data %>%
dplyr::select(user_id,action,num_searches,date) %>%
mutate(searches_category = case_when(
num_searches == 0 ~ 0,
num_searches <= 50 ~ 50,
num_searches <= 250 ~ 250,
num_searches <= 500 ~ 500,
num_searches <= 750 ~ 750,
num_searches <= 1000 ~ 1000,
num_searches <= 1250 ~ 1250,
num_searches <= 1500 ~ 1500,
num_searches <= 1750 ~ 1750,
num_searches <= 2000 ~ 2000,
num_searches <= 2250 ~ 2250,
num_searches <= 2500 ~ 2500,
num_searches <= 2750 ~ 2750,
num_searches > 3000 ~ 3000))
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = sum(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
group50 <- subset(searches, searches_category == 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
# Take a random sample of rows from the afternoon_group
sample_size <- 3000
sample <- shuffled_50group[1:sample_size, ]
searches_sampled <- searches[searches$searches_category != 50, ]
searches_sampled <- rbind(searches_sampled, sample)
searches <- searches %>%
filter(searches_category == 0 | searches_category == 50 )
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = sum(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
searches <- data %>%
dplyr::select(user_id,action,num_searches,date) %>%
mutate(searches_category = case_when(
num_searches == 0 ~ 0,
num_searches <= 50 ~ 50,
num_searches <= 250 ~ 250,
num_searches <= 500 ~ 500,
num_searches <= 750 ~ 750,
num_searches <= 1000 ~ 1000,
num_searches <= 1250 ~ 1250,
num_searches <= 1500 ~ 1500,
num_searches <= 1750 ~ 1750,
num_searches <= 2000 ~ 2000,
num_searches <= 2250 ~ 2250,
num_searches <= 2500 ~ 2500,
num_searches <= 2750 ~ 2750,
num_searches > 3000 ~ 3000))
group50 <- subset(searches, searches_category == 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
# Take a random sample of rows from the afternoon_group
sample_size <- 2500
sample <- shuffled_50group[1:sample_size, ]
searches_sampled <- searches[searches$searches_category != 50, ]
searches_sampled <- rbind(searches_sampled, sample)
searches <- searches %>%
filter(searches_category == 0 | searches_category == 50 )
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = sum(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
searches <- searches %>%
filter(searches_category == 0 | searches_category == 50 )
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = sum(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = count(user_id),
conversion_rate_action = (no_actions / user_count),
conversion_rate_no = (actions / user_count))
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = count(*),
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action))
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
searches <- data %>%
dplyr::select(user_id,action,num_searches,date) %>%
mutate(searches_category = case_when(
num_searches == 0 ~ 0,
num_searches <= 50 ~ 50,
num_searches <= 250 ~ 250,
num_searches <= 500 ~ 500,
num_searches <= 750 ~ 750,
num_searches <= 1000 ~ 1000,
num_searches <= 1250 ~ 1250,
num_searches <= 1500 ~ 1500,
num_searches <= 1750 ~ 1750,
num_searches <= 2000 ~ 2000,
num_searches <= 2250 ~ 2250,
num_searches <= 2500 ~ 2500,
num_searches <= 2750 ~ 2750,
num_searches > 3000 ~ 3000))
user_counts_by_searches <- searches %>%
group_by(searches_category)  %>%
summarise(actions = sum(action),
no_actions = sum(!action),
user_count = count(*),
group50 <- subset(searches, searches_category == 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
# Take a random sample of rows from the afternoon_group
sample_size <- 2500
sample <- shuffled_50group[1:sample_size, ]
searches_sampled <- searches[searches$searches_category != 50, ]
searches_sampled <- rbind(searches_sampled, sample)
searches <- searches %>%
filter(searches_category == 0 | searches_category == 50 )
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action))
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
chisq_result <- chisq.test(observed_overall)
test_statistic <- chisq_result$statistic
p_value <- chisq_result$p.value
cat("Chi-Squared Test Results:\n")
cat("Test Statistic:", test_statistic, "\n")
cat("p-value:", p_value, "\n")
group50 <- subset(searches, searches_category == 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
# Take a random sample of rows from the afternoon_group
sample_size <- 2000
sample <- shuffled_50group[1:sample_size, ]
searches <- data %>%
dplyr::select(user_id,action,num_searches,date) %>%
mutate(searches_category = case_when(
num_searches == 0 ~ 0,
num_searches <= 50 ~ 50,
num_searches <= 250 ~ 250,
num_searches <= 500 ~ 500,
num_searches <= 750 ~ 750,
num_searches <= 1000 ~ 1000,
num_searches <= 1250 ~ 1250,
num_searches <= 1500 ~ 1500,
num_searches <= 1750 ~ 1750,
num_searches <= 2000 ~ 2000,
num_searches <= 2250 ~ 2250,
num_searches <= 2500 ~ 2500,
num_searches <= 2750 ~ 2750,
num_searches > 3000 ~ 3000))
group50 <- subset(searches, searches_category == 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
# Take a random sample of rows from the afternoon_group
sample_size <- 2000
sample <- shuffled_50group[1:sample_size, ]
searches_sampled <- searches[searches$searches_category != 50, ]
searches_sampled <- rbind(searches_sampled, sample)
searches <- searches %>%
filter(searches_category == 0 | searches_category == 50 )
searches <- searches_sampled  %>%
filter(searches_category == 0 | searches_category == 50 )
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action))
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
group50 <- subset(searches, searches_category == 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
searches <- data %>%
dplyr::select(user_id,action,num_searches,date) %>%
mutate(searches_category = case_when(
num_searches == 0 ~ 0,
num_searches <= 50 ~ 50,
num_searches <= 250 ~ 250,
num_searches <= 500 ~ 500,
num_searches <= 750 ~ 750,
num_searches <= 1000 ~ 1000,
num_searches <= 1250 ~ 1250,
num_searches <= 1500 ~ 1500,
num_searches <= 1750 ~ 1750,
num_searches <= 2000 ~ 2000,
num_searches <= 2250 ~ 2250,
num_searches <= 2500 ~ 2500,
num_searches <= 2750 ~ 2750,
num_searches > 3000 ~ 3000))
group50 <- subset(searches, searches_category == 50)
shuffled_50group <- group50[sample(nrow(group50)), ]
# Take a random sample of rows from the afternoon_group
sample_size <- 2500
sample <- shuffled_50group[1:sample_size, ]
searches_sampled <- searches[searches$searches_category != 50, ]
searches_sampled <- rbind(searches_sampled, sample)
searches <- searches_sampled  %>%
filter(searches_category == 0 | searches_category == 50 )
overall  <- searches %>%
group_by(searches_category) %>%
summarise(actions = sum(action), no_actions = sum(!action))
observed_overall <- matrix(overall$actions, nrow = 2, byrow = TRUE)
# Add the no_actions column to the contingency table
observed_overall <- cbind(observed_overall, overall$no_actions)
# Add row and column names
colnames(observed_overall) <- c("actions", "no_actions")
rownames(observed_overall) <- c("1", "2")
# Print the contingency table
print(observed_overall)
chisq_result <- chisq.test(observed_overall)
test_statistic <- chisq_result$statistic
p_value <- chisq_result$p.value
cat("Chi-Squared Test Results:\n")
cat("Test Statistic:", test_statistic, "\n")
cat("p-value:", p_value, "\n")
